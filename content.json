{"meta":{"title":"Yuuki's blog","subtitle":"subtitle","description":"CyberSec | WebSec | Blog","author":"yuuki","url":"https://blog.uuki.moe","root":"/"},"pages":[{"title":"","date":"2023-05-28T11:50:14.124Z","updated":"2023-05-28T11:50:14.124Z","comments":true,"path":"404.html","permalink":"https://blog.uuki.moe/404.html","excerpt":"","text":"404 很抱歉，您访问的页面不存在 可能是输入地址有误或该地址已被删除"},{"title":"About","date":"2023-05-28T11:50:14.123Z","updated":"2023-05-28T11:50:14.123Z","comments":true,"path":"about/index.html","permalink":"https://blog.uuki.moe/about/index.html","excerpt":"","text":""},{"title":"Links","date":"2023-05-28T11:50:14.126Z","updated":"2023-05-28T11:50:14.125Z","comments":true,"path":"friends/index.html","permalink":"https://blog.uuki.moe/friends/index.html","excerpt":"","text":""},{"title":"Categories","date":"2023-05-28T11:50:14.131Z","updated":"2023-05-28T11:50:14.131Z","comments":true,"path":"categories/index.html","permalink":"https://blog.uuki.moe/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2023-05-28T11:50:14.124Z","updated":"2023-05-28T11:50:14.124Z","comments":true,"path":"tags/index.html","permalink":"https://blog.uuki.moe/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Hello World","slug":"hello-world","date":"2023-05-27T16:00:00.000Z","updated":"2023-05-28T12:40:32.305Z","comments":true,"path":"2023/05/28/hello-world/","link":"","permalink":"https://blog.uuki.moe/2023/05/28/hello-world/","excerpt":"Welcome to my blog. 👋 这是第一个帖子, 记录了这个站点的诞生。","text":"Welcome to my blog. 👋 这是第一个帖子, 记录了这个站点的诞生。 1. 初始化 Hexo blog## 初始化cd ~/bloghexo initgit init .## 安装主题# https://github.com/volantis-x/hexo-theme-volantis/git submodule add https://github.com/volantis-x/hexo-theme-volantis.git themes/volantiscp themes/volantis/_config.yml ./_config.volantis.yml 修改主题配置文件_config.volantis.yml+ 131 - navbar: # 导航栏- 171 - cover: # 头图+ 214 - pages: # 友链页面配置+ 387 - comments: # 评论+ 563 - sidebar: # 侧边栏+ 728 - site_footer: # 页脚+ 817 - plugins: # 插件+ 1053 - rightmenus: # 右键菜单 安装拓展插件## 音乐播放器# https://aplayer.js.org/#/zh-Hans/npm install aplayer --save## Hexo 搜索# https://github.com/alexbruno/hexo-generator-json-contentnpm install hexo-generator-json-content --save## Highlight# https://highlightjs.org/static/demo/# https://www.jsdelivr.com/package/npm/@highlightjs/cdn-assets?path=styles&amp;tab=files暂时没有启用, 而是使用 Hexo 内置的 Highlight## RSSnpm install hexo-generator-feed --save本地文件 atom.xml 会存在乱码, 部署到远程就没问题了## Deploy# https://github.com/hexojs/hexo-deployer-gitnpm install hexo-deployer-git --save 元数据盒子各种首页的 Front-matter about/index.mdlayout: docsindex: truetitle: Abouttop_meta: falsebottom_meta: falsesidebar: [] categories/index.mdlayout: categoryindex: truetitle: Categoriestop_meta: falsebottom_meta: falsesidebar: [] tags/index.mdlayout: tagindex: truetitle: Tagstop_meta: falsebottom_meta: falsesidebar: [] friends/index.mdlayout: friendsindex: truetitle: Linkstop_meta: falsebottom_meta: falsesidebar: [] 2. 集成 Obsidian注意, 使用 Obsidian 打开 hexo 博客根目录作为仓库, 而不是 _posts 或其他路径 本地图片适配 依赖于 Custom Attachment Location 插件 Location for New Attachments: source/assets/$&#123;filename&#125; Pasted Image Name: image-$&#123;date&#125; Date Format: YYYYMMDD_HHmmssSSS Automatically rename attachment folder: 打开 Automatically rename attachment files: 关闭 创建模板文件 依赖于 Templater 插件 创建模板 cd ~/blogmkdir template template/post.mdtitle: &lt;% tp.file.title %&gt;date: &lt;% tp.date.now(&quot;YYYY-MM-DD HH:mm:ss&quot;) %&gt;author: Yuukiupdated: cover: tags: [&lt;% tp.system.prompt(&quot;Tag&quot;, &quot;&quot;) %&gt;]categories: [&lt;% tp.system.prompt(&quot;Category&quot;, &quot;&quot;) %&gt;] template/timeNow.md&lt;% tp.date.now(&quot;YYYY-MM-DD HH:mm:ss&quot;) %&gt; template/title.md&lt;% tp.file.title %&gt; 修改配置文件 Enable Folder Templates: 勾选 General Settings -&gt; Template folder location: template Folder Templates -&gt; Add New: Folder&#x3D;source/_posts, Template&#x3D;template/post.md 可视化管理文件 依赖于 MAKE.md 插件 Context -&gt; Contexts: 关闭 (方便编辑 Front-matter) 创建自定义空间 后续需要添加任何自定义空间都可以通过这个按钮编辑, 例如附件, 分类, 标签的管理 清理无用文件Plan A: 依赖于 File Cleaner 插件 因为这个插件默认检索全仓库, 需要多加一点规则避免删除有用的文件 在删除之后, 右上角会弹窗提示, 如果有意外情况记得在清空废纸篓之前手动检查 Excluded Foldersnode_modules/scaffolds/template/themes/ Plan B: 使用 Find orphaned files and broken links 插件 Find orphaned files and broken links 是一个可以用于发现空文件, 没有链接的文件的插件。 配置要更加复杂, 我也没有采用这种方案 3. Hexo 半自动化部署 依赖于 Shell command 插件 顶部导航栏选择 Environments 下方找到 Add directories to the PATH environment variable, 为 hexo 命令添加环境变量 编写了一个脚本用于自动化操作 hexo hexo.sh#!/bin/bash# 检查 hexo 进程状态function check_status() &#123; if ps aux | grep hexo | grep -v grep | grep -v hexo.sh &gt;/dev/null; then pid=$(ps aux | grep hexo | grep -v grep | grep -v hexo.sh | awk &#x27;&#123;print $2&#125;&#x27;) echo &quot;Hexo server is running [$pid]&quot; else echo &quot;Hexo server is not running...&quot; fi&#125;# 终止 hexo 进程function stop_hexo() &#123; if ps aux | grep hexo | grep -v grep | grep -v hexo.sh &gt;/dev/null; then pid=$(ps aux | grep hexo | grep -v grep | grep -v hexo.sh | awk &#x27;&#123;print $2&#125;&#x27;) echo &quot;Hexo server is running [$pid]&quot; kill $pid echo &quot;Hexo server is stoped...&quot; else echo &quot;Hexo server is not running...&quot; fi&#125;# 重启 hexo 进程function restart_hexo() &#123; stop_hexo start_hexo&#125;# 启动 hexo 进程function start_hexo() &#123; if ps aux | grep hexo | grep -v grep | grep -v hexo.sh &gt;/dev/null; then echo &quot;Hexo is running...&quot; else hexo server &amp; pid=$(ps aux | grep hexo | grep -v grep | grep -v hexo.sh | awk &#x27;&#123;print $2&#125;&#x27;) echo &quot;Hexo is running... [$pid]&quot; fi&#125;# 部署 hexo 到 GitHubfunction deploy_hexo() &#123; hexo deploy&#125;# 根据命令行参数执行对应的操作case $1 in &quot;status&quot;) check_status ;; &quot;stop&quot;) stop_hexo ;; &quot;restart&quot;) restart_hexo ;; &quot;start&quot;) start_hexo ;; &quot;deploy&quot;) deploy_hexo ;; *) echo &quot;使用方法: $0 [status|stop|restart|start|deploy]&quot; exit 1 ;;esac Shell command 详细配置参考下面的图片 👇🏻 使用方法: Command + P 打开命令面板, 输入 hexo server, 回车后键入对应操作即可 %%## 3. 部署博客 npm install hexo-deployer-git --save + deploy: + type: git + repo: https://github.com/moeuuki/moeuuki.github.io + branch: main ```%%","categories":[{"name":"dev","slug":"dev","permalink":"https://blog.uuki.moe/categories/dev/"}],"tags":[{"name":"blog","slug":"blog","permalink":"https://blog.uuki.moe/tags/blog/"}],"author":"Yuuki"}],"categories":[{"name":"dev","slug":"dev","permalink":"https://blog.uuki.moe/categories/dev/"}],"tags":[{"name":"blog","slug":"blog","permalink":"https://blog.uuki.moe/tags/blog/"}]}